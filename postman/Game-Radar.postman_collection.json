{
	"info": {
		"_postman_id": "8bafb568-33d4-4ce1-855d-ca1ddd162b2f",
		"name": "Game-Radar",
		"description": "REST API Spec for a ACC server manager backend.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "admin",
			"item": [
				{
					"name": "List all users (extended)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/admin/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all roles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/admin/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let userName = pm.response.json().username;",
									"pm.environment.set(\"userUsername\", userName);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"userNameChanged\",\r\n    \"roles\": [\r\n        \"ROLE_USER\",\r\n        \"ROLE_TOURNAMENT_ORGANISER\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all installed plugins",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/admin/plugins",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"plugins"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all supported providers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/admin/plugins/supportedProviders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"plugins",
								"supportedProviders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate reset token for user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/admin/users/requestPasswordReset/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"users",
								"requestPasswordReset",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "setup",
			"item": [
				{
					"name": "Setup the app",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let adminId = pm.response.json().id;",
									"pm.environment.set(\"adminId\", adminId);",
									"pm.environment.set(\"userUsername\", \"user\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{adminUsername}}\",\n    \"password\": \"{{adminPassword}}\",\n    \"email\": \"{{adminEmail}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/setup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"setup"
							]
						}
					},
					"response": [
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "a JWT token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						}
					]
				}
			]
		},
		{
			"name": "login",
			"item": [
				{
					"name": "Authorize the client (admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let token = postman.getResponseHeader(\"Authorization\");\r",
									"if(token) token = token.substring(token.indexOf(\" \") + 1, token.length);\r",
									"pm.environment.set(\"jwt\", token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{adminUsername}}\",\n    \"password\": \"{{adminPassword}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "a JWT token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Authorize the client (user)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let token = postman.getResponseHeader(\"Authorization\");\r",
									"if(token) token = token.substring(token.indexOf(\" \") + 1, token.length);\r",
									"pm.environment.set(\"jwt\", token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{userUsername}}\",\n    \"password\": \"{{userPassword}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "a JWT token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Register a new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let userId = pm.response.json().id;",
									"pm.environment.set(\"userId\", userId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{userUsername}}\",\n    \"password\": \"{{userPassword}}\",\n    \"email\": \"{{userEmail}}\",\n    \"locale\": \"DE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request password reset",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/login/requestPasswordReset/{{adminEmail}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login",
								"requestPasswordReset",
								"{{adminEmail}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset password",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"newPassword\": \"test123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login/resetPassword/<token>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login",
								"resetPassword",
								"<token>"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "List all users (basic)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get own details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/self",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"self"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit own details",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"newAdmin\",\n    \"password\": \"{{adminPassword}}\",\n    \"email\": \"newAdmin@admin.de\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/self",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"self"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete own user",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"newAdmin\",\n    \"password\": \"{{adminPassword}}\",\n    \"email\": \"newAdmin@admin.de\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/self",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"self"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "gameservers",
			"item": [
				{
					"name": "List all gameservers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gameservers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gameservers"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all gameserver statuses",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gameservers/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gameservers",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create gameserver (Minecraft)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let gameServerId = pm.response.json().id;\r",
									"pm.environment.set(\"gameServerId\", gameServerId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Minecraft Server\",\n\t\"host\": \"{{defaultHost}}\",\n\t\"game\": \"Minecraft\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/gameservers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gameservers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create gameserver (GMod)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let gameServerId = pm.response.json().id;\r",
									"pm.environment.set(\"gameServerId\", gameServerId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Garry's Mod Server\",\n\t\"host\": \"{{defaultHost}}\",\n\t\"game\": \"Garry's Mod\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/gameservers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gameservers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create gameserver (R6S)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Rainbow Six Server\",\n\t\"host\": \"{{defaultHost}}\",\n\t\"port\" : 12345,\n\t\"game\": \"Rainbow Six\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/gameservers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gameservers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit gameserver",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"GommeHD\",\n\t\"host\": \"gommehd.net\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/gameservers/{{gameServerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gameservers",
								"{{gameServerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete gameserver",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gameservers/{{gameServerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gameservers",
								"{{gameServerId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}